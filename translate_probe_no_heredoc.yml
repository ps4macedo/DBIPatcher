name: DBI 821 Probe (no-heredoc)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  probe:
    runs-on: ubuntu-latest
    env:
      DBI_VER: 821
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo apt-get install -y build-essential zstd libzstd-dev lz4 gzip binutils
          python3 -m pip install --upgrade pip
          python3 -m pip install zstandard

      - name: Build dbipatcher
        shell: bash
        run: |
          set -euo pipefail
          make -j bin/dbipatcher || make -j dbipatcher || true

      - name: Extract NRO
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -f "dbi/DBI.${DBI_VER}.ru.nro" ]; then
            echo "::error file=dbi/DBI.${DBI_VER}.ru.nro::Arquivo do NRO nÃ£o encontrado"
            ls -la dbi || true
            exit 1
          fi
          ./bin/dbipatcher --extract "dbi/DBI.${DBI_VER}.ru.nro" --output "/tmp/DBI_${DBI_VER}" || true
          ls -la "/tmp/DBI_${DBI_VER}" || true

      - name: Probe rec blobs (dump + try decompress + strings)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p debug_rec
          for i in $(seq 0 9); do
            IN="/tmp/DBI_${DBI_VER}/rec${i}.bin"
            [ -f "$IN" ] || continue
            cp "$IN" "debug_rec/rec${i}.bin"
            head -c 16 "$IN" | od -An -tx1 > "debug_rec/rec${i}.magic.txt" || true

            for mode in raw zstd gzip lz4 zlib zlibraw deflate; do
              OUT="debug_rec/rec${i}.${mode}.bin"
              case "$mode" in
                raw)
                  cp "$IN" "$OUT"
                  ;;
                zstd)
                  zstd -q -d -c "$IN" > "$OUT" 2>/dev/null || rm -f "$OUT"
                  ;;
                gzip)
                  gzip -q -dc "$IN" > "$OUT" 2>/dev/null || rm -f "$OUT"
                  ;;
                lz4)
                  lz4 -q -d -c "$IN" > "$OUT" 2>/dev/null || rm -f "$OUT"
                  ;;
                zlib)
                  python3 -c 'import sys,zlib,pathlib; p=pathlib.Path(sys.argv[1]).read_bytes();\
out=None\
\
try:\
  out=zlib.decompress(p)\
except Exception:\
  pass\
\
import pathlib as _p; import sys as _s; o=_s.argv[2]\
\
import builtins as _b\
\
(_p.Path(o).write_bytes(out) if out is not None else None)' "$IN" "$OUT" || true
                  [ -s "$OUT" ] || rm -f "$OUT"
                  ;;
                zlibraw)
                  python3 -c 'import sys,zlib,pathlib; p=pathlib.Path(sys.argv[1]).read_bytes(); o=sys.argv[2]; out=None\
\
for w in (-15,-14,-13,-12):\
  try:\
    out=zlib.decompress(p,wbits=w); break\
  except Exception:\
    pass\
\
import pathlib as _p; (_p.Path(o).write_bytes(out) if out is not None else None)' "$IN" "$OUT" || true
                  [ -s "$OUT" ] || rm -f "$OUT"
                  ;;
                deflate)
                  python3 -c 'import sys,zlib,pathlib; p=pathlib.Path(sys.argv[1]).read_bytes(); o=sys.argv[2]\
\
try:\
  d=zlib.decompressobj(-zlib.MAX_WBITS); out=d.decompress(p)+d.flush(); path=pathlib.Path(o); path.write_bytes(out)\
except Exception:\
  pass' "$IN" "$OUT" || true
                  [ -s "$OUT" ] || rm -f "$OUT"
                  ;;
              esac
              if [ -f "$OUT" ]; then
                strings -a -n 3 "$OUT" | head -n 200 > "debug_rec/rec${i}.${mode}.strings.txt" || true
              fi
            done
          done

      - name: Upload probe artifact
        uses: actions/upload-artifact@v4
        with:
          name: rec_probe
          path: debug_rec/**
          if-no-files-found: warn
